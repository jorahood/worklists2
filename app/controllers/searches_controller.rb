class SearchesController < ApplicationController

  hobo_model_controller

  auto_actions :all

  def show
    @search = find_instance
    # add scopes that pertain only to this display (e.g., including the
    # default title, visibility, and volatility, and setting a sort order)
    # and then paginate the search's "docs"
    # association proxy object generated by Search#perform
    @unpaginated_result_docs = @search.perform.apply_scopes(
      :include_default_title => true,
      :include_visibility => true,
      :include_volatility => true,
      :order_by => parse_sort_param(:id, :default_title, :visibility_assoc,
        :volatility_assoc, :birthdate, :modifieddate, :approveddate)
    )

    hobo_show do |format|
      format.xml do
        render :xml => @unpaginated_result_docs.to_xml(:only => 'id')
      end
      format.html do
        @result_docs = @unpaginated_result_docs.paginate(
      :page => params[:page])
      end
    end
  end
end
