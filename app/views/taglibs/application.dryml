<include src="hobo-jquery" plugin="hobo-jquery" />
<include src="rapid" plugin="hobo"/>

<include src="taglibs/auto/rapid/cards"/>
<include src="taglibs/auto/rapid/pages"/>
<include src="taglibs/auto/rapid/forms"/>

<set-theme name="clean"/>

<!--tag extensions -->
<extend tag='page'>
  <old-page merge>
    <custom-scripts:>
      <hjq-assets/>
</custom-scripts>
  </old-page>
</extend>

<def tag="main-nav">
  <navigation class="main-nav" merge-attrs param="default">
    <nav-item href="#{base_url}/">Home</nav-item>
    <nav-item with="&BoilerUsage">Boiler Usages</nav-item>
    <nav-item with="&Doc">Docs</nav-item>
    <nav-item with="&Domain">Domains</nav-item>
    <nav-item with="&List">Lists</nav-item>
    <nav-item with="&Search">Searches</nav-item>
  </navigation>
</def>

<def tag="nil-view"></def>
<def tag="app-name"><app-release/></def>

<def tag="app-release"><%= revision_name %></def>

<extend tag="page">
  <old-page merge without-live-search/>
</extend>

<extend tag="table-plus">
  <old-table-plus merge without-page-nav without-search/>
</extend>

<!--since I'm using CAS for login I don't want or need all the hobo login management links-->
<extend tag="account-nav">
  <old-account-nav merge without-account without-log-out without-log-in without-sign-up/>
</extend>

<!--<extend tag="card" for="Domain">
  <old-card merge>
    <count:></count:>
  </old-card>
</extend>
-->
<extend tag="card" for="List">
  <old-card merge>
    <append-body:>
      <div class="docs">
        <repeat:listed_docs join=", "><doc-link:doc_id/></repeat:listed_docs>
      </div>
    </append-body:>
  </old-card>
</extend>

<!--define the field-list tag for search to set the order of appearance of 
the fields so that importance will come just below importance_is, etc. With 
dates I could set the order in the fields declaration in search.rb but with 
the keyword associations this doesn't work because the associations come
after all the attributes. So, doing the order manually here. Using this tag 
in my extension of <form> and customization of <show-page> for Search-->
<def tag="field-list-for-search">
  <field-list: fields="name, approveddate_is, approveddate, birthdate_is,
               birthdate, expiredate_is, expiredate, modifieddate_is, modifieddate, 
               importance_is, importance, visibility_is, visibility, volatility_is, 
               volatility, status_is, status, title_search, xtra_search, author, owner,
               boiler, hotitem, resources, domains, lists" view-blank="&false"/>
</def>

<extend tag="form" for="Search">
  <old-form merge>
    <field-list: replace>
      <field-list-for-search/>
   </field-list:>
  </old-form>
</extend>

<extend tag="view">
  <old-view merge no-wrapper />
</extend>

<def tag="input" for="Date">
  <hjq-datepicker dateFormat="yy-mm-dd" merge />
</def>

<def tag="input" for="datetime" attrs="order">
  <% if ! order.nil?
    order = comma_split(order).*.to_sym
    attributes.merge!(:order => order)
  end -%>
  <%= select_datetime(this, attributes.merge(:prefix => param_name_for_this, :prompt =>true)) %>
</def>

<def tag="input" for="Kbuser"><name-one merge/></def>
<def tag="input" for="Boiler"><name-one merge/></def>
<def tag="input" for="Hotitem"><name-one merge/></def>

<def tag="card" for="Doc">
  <h4>
    <a><name/> --
      <!-- FIXME: HOBO - the 'inline' attribute doesn't work when I call the <view> tag directly-->
      <name:default-title inline />
    </a>
  </h4>
</def>

<!-- add links to the title's audience & doc (and parameterize them so I can filter one or the
other out depending on where the card is appearing) and keep titles inline (type :html
defaults to <div> wrapper but 'inline' forces it to use a <span> wrapper)-->
<def tag="card" for="Title">
  <h4>
    <a:audience param="audience-link"/>
    <a:doc param="doc-link"/>:
    <name inline/>
  </h4>
</def>

<!-- add created_at timestamp to the card for Notes -->
<extend tag="card" for="Note">
  <old-card merge>
    <append-body:>
      <view:created_at/>
    </append-body:>
   </old-card>
</extend>

<extend tag="card" for="Reference">
  <old-card merge>
    <heading:>
      <doc-link:fromid param="refby-link"/>
      <doc-link:toid param="ref-link"/>
    </heading:>
  </old-card>
</extend>

<extend tag="card" for="KbaUsage">
  <old-card merge>
    <heading:>
      <doc-link:docid param="kba_by-link"/>
      <doc-link:kba param="kba-link"/>
    </heading:>
  </old-card>
</extend>

<extend tag="input" for="HoboFields::EnumString">
  <old-input merge titleize="&false"/>
</extend>

<def tag="empty-collection-message"></def>

<def tag="doc-link">
  <%= link_to this, :controller => "docs", :action => "show", :id => this %>
</def>

<def tag="view" for="datetime"><didwhen/></def>

<def tag="didwhen"><%=
    elapsed = Time.now - this
    case elapsed
    when 0..10
      'just now'
    when 10..40
      "less than #{(elapsed * 1.5).to_i.to_s.slice(0,1)}0 seconds ago"
    when 40..60
      'less than a minute ago'
    when 60..120
      "less than two minutes ago"
    when 120..3000
      "#{(elapsed / 60).to_i} minutes ago"
    when 3000..5040
      'an hour ago'
    when 5040..(60  * 60 * 24 / 1.02)
      "#{(elapsed / 60 / 60 * 1.02).to_i} hours ago"
    else
      this.strftime("%H:%M %p %B %d, %Y")
    end
%></def>

<!-- redefining table to remove the classes of "even" and "odd" which interfere with DataTables' even and odd classes -->
<def tag="table" attrs="fields, field-tag, empty">
  <if test="&!(fields || all_parameters.tr?)">
    <%= element("table", attributes, all_parameters.default) %>
  </if>
  <else>
    <% field_tag ||= "view" %>
    <unless test="&this.empty? && !empty">
      <% element "table", attributes - attrs_for(:with_fields) do %>
      <thead if="&all_parameters[:thead] || fields" param>
        <tr param="field-heading-row">
          <with-field-names merge-attrs="&all_attributes & attrs_for(:with_fields)">
            <th param="#{scope.field_name}-heading"><%= this.member_class.try.view_hints.try.field_name(scope.field_name) if scope %></th>
          </with-field-names>
          <th if="&all_parameters[:controls]" class="controls"/>
        </tr>
      </thead>
      <tbody param>
        <repeat>
          <tr param if="&can_view?"
              class="#{this_type.name.underscore} #{model_id_class}">
            <if test="&fields">
              <with-fields merge-attrs="&all_attributes & attrs_for(:with_fields)" force-all>
                <td param="#{scope.field_name.to_s.sub('?', '').gsub('.', '-')}-view"><call-tag tag="&field_tag"/></td>
              </with-fields>
              <td class="controls" param="controls" if="&all_parameters[:controls]">
                <a param="edit-link" action="edit" if="&can_edit?"><ht key="hobo.action.edit">Edit</ht></a>
                <delete-button param/>
              </td>
            </if>
          </tr>
        </repeat>
      </tbody>
      <tfoot if="&all_parameters[:tfoot]" param/>
      <% end %>
    </unless>
  </else>
</def>
